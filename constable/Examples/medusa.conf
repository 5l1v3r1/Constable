
/*

   devices tty userdev bin medusa home mailbox home_public web ftp temp
   data etc var

 */


function xenter_domain
{
	log("enter domain",$1,"pid=",pid,"uid=",uid);
	enter_domain($1);
}


space cely_fs	recursive "/";
space procesy recursive "proc";

space devices	recursive "/dev"
		;
		
space tty	"/dev/[tp]ty.*" + "/dev/pts" + "/dev/ptmx"
		+ "/dev/console" + "/dev/vcs.*"
		;

space userdev	"/dev/null","/dev/zero","/dev/random","/dev/urandom"
		;

space etc	recursive "/etc", recursive "/usr/etc"
		+ recursive "/usr/local/etc"
		+ recursive "/proc"
		+ recursive "/var/spool/atjobs"
		+ recursive "/var/spool/atspool"
		+ recursive "/var/spool/cron"
		+ recursive "/root"
		- "/proc/sys/kernel/modprobe"
		- "/etc/fstab"
		- "/etc/exports"
		- "/etc/inittab"
		- "/etc/inetd\\.conf"
		- "/etc/lilo\\.conf"
		- "/etc/medusa\\.conf" - "/etc/rbac\\.conf"
		- "/etc/modules\\.conf"
		- "/etc/ld\\.so\\.cache" - "/etc/ld\\.so\\.conf"
		- recursive "/etc/rc\\.d"
		;

space bin	recursive "/bin" + recursive "/sbin"
		+ recursive "/lib" + recursive "/shlib"
		+ recursive "/boot"
		+ recursive "/usr"
		+ recursive "/opt"
		+ recursive "/home/ftp/bin"
		+ recursive "/home/ftp/lib"
		+ recursive "/home/ftp/usr"
		+ "/"
	       	+ "/dev"
		+ "/var"
		+ "/etc"
		+ "/etc/fstab"
		+ "/etc/exports"
		+ recursive "/var/lib/nfs"
		+ "/etc/inittab"
		+ "/etc/inetd\\.conf"
		+ "/etc/lilo\\.conf"
		+ "/etc/modules\\.conf"
		+ "/etc/ld\\.so\\.cache" + "/etc/ld\\.so\\.conf"
		+ recursive "/etc/rc\\.d"
		+ recursive "/var/X11R6"
		+ "/proc/sys/kernel/modprobe"
		- recursive "/usr/etc"
		- recursive "/usr/local/etc"
		- recursive "/usr/src"
		- recursive "/usr/local/src"
		- "/sbin/constable"
		;

space medusa	recursive "/medusa"
		+ "/etc/medusa\\.conf" + "/etc/rbac\\.conf"
		+ "/sbin/constable"
		;

space var	recursive "/var"
		- recursive "/var/X11R6"
		- recursive "/var/spool/mail"
		- recursive "/var/spool/atjobs"
		- recursive "/var/spool/atspool"
		- recursive "/var/spool/cron"
		- recursive "/var/lib/nfs"
		;

space home	recursive "/home"
//		- recursive "/home/marek/Marek"
		;

space mailbox	recursive "/var/spool/mail"
		+ "/home/.*/mail"
		+ "/home/.*/Mail"
		+ "/home/.*/UNSORTED_MAIL"
		;

space home_public "/home/.*"
		+ "/home/.*/\\.forward"
		+ "/home/.*/\\.mailsortrc"
		+ "/home/.*/\\.procmailrc"
		+ "/home/.*/\\.plan"
		+ "/home/.*/\\.project"
		+ "/home/.*/\\.tellrc"
		+ "/home/.*/\\.screenrc"
		+ "/home/.*/\\.terminfo"
		+ "/home/.*/bin"
		+ "/home/.*/Bin"
		;

space web	recursive "/services/web-data"
		+ recursive "/home/.*/web-data"
		;

space ftp	recursive "/home/ftp"
		+ recursive "/home/.*/incoming"
		+ recursive "/home/.*/Incoming"
		- recursive "/home/ftp/bin"
		- recursive "/home/ftp/lib"
		- recursive "/home/ftp/usr"
		;

space temp	recursive "/temp" + recursive "/var/tmp"
		+ "/tmp"
		+ recursive "/var/man"
		;

space data	recursive "/services"
		+ recursive "/cdrom"
		+ recursive "/mnt"
		;

/*
 * Tymto je povolene byt suid
 */
space skove	"/bin/ping"
		;

/*
 * Vsetky procesy mozu spustat hocico, co spustat mozu.
 */
procesy ENTER procesy;
		
/*
 * Vsetky procesy spustane z kernelu (proc/)
 * Domena init
 */
space init	"domain/init" + "proc/" + "domain/";
procesy		ENTER	init;
init		READ	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
		WRITE	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
		ENTER	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
		SEE	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var;
init		WRITE	init,
		SEE	init;

/*
 * Domena daemon pre "ostatnych" beziacich daemonov
 */
space daemon	  "domain/daemon"
		+ "/usr/sbin/inetd"
		+ "/usr/sbin/crond"
		+ "/usr/sbin/atd"
		+ "/usr/sbin/apmd"
		;
procesy exec daemon	{ xenter_domain("daemon"); }
procesy		ENTER   daemon;
daemon		READ	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
		WRITE	tty,userdev,bin,temp,var,
		ENTER	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
		SEE	devices,tty,userdev,bin,home,mailbox,home_public,
			web,ftp,temp,data,etc,var,
			daemon;
init		WRITE	daemon,
		SEE	daemon;
daemon		SEE	daemon;

/*
 * Vsetky procesy ktore prihlasuju juzra 
 */
space login	"domain/login"
		+ "/bin/login"
		;
procesy		ENTER	login;
procesy exec login {
	if( luid!=65535 && luid!=0 )
		return(DENY);
	xenter_domain("login");
}
login		READ	tty,userdev,bin,home,mailbox,temp,data,etc,var,
		WRITE	tty,userdev,home,mailbox,temp,
		ENTER	tty,userdev,bin,home,mailbox,temp,data,etc,var,
		SEE	tty,userdev,bin,home,mailbox,temp,data,etc,var,
			login;
init		WRITE	login,
		SEE	login;
daemon		SEE	login;
login		SEE	login;

/*
 * Domena user
 */
space user	"domain/user";
login proc_exec {
	log("pred user",event);
	xenter_domain("user");
	log("po   user",event);
}
user		READ	tty,userdev,bin,home,mailbox,temp,data,etc,var,
		WRITE	tty,userdev,home,mailbox,temp,user,
		ENTER	tty,userdev,bin,home,mailbox,temp,data,etc,var,
		SEE	tty,userdev,bin,home,mailbox,temp,data,etc,var,
			login;
init		WRITE	user,
		SEE	user;
daemon		SEE	user;
login		SEE	user;
login		ENTER	user;
user		SEE	user;

space named	  "domain/named"
		+ "/usr/sbin/named"
		;
procesy		ENTER named;
space named_data	recursive "/var/named";
procesy exec named	{ xenter_domain("named"); }
named		READ	bin,named_data,
		WRITE	bin,named_data,
		ENTER	bin,named,named_data,
		SEE	bin,named,named_data;
init		WRITE	named,
		SEE	named;
named		SEE	named;


procesy link cely_fs {
	if( luid==65535 || (vsw & space bin) )
		return(OK);
	if( !(file.vs & space bin) ) /* ??? */
		return(OK);
	log("pokus o hard link pid=",pid,"uid=(",uid,euid,fsuid,") vs=[",vs,vsr,vsw,vss,"]");
	return(DENY);
}

"proc/"	start {
	log("nieco staruje",pid,luid);
}

procesy setuid {
	if( luid==65535 )
	{	xenter_domain("login");
	}
	else if( uid != luid )
	{
		log("pokus o setuid",pid,"luid=",luid," uid=",uid,"euid=",euid);
		uid=euid=suid=fsuid=luid;
		if( luid==0 )	ecap=pcap;
		else		ecap=0;
		pcap=icap=ecap;
	}
//	else	log("setuid:",pid,"luid=",luid,"uid=",uid,"euid=",euid);
}

procesy exec skove {
	flags += 1;
	log("pridavam flag",flags);
}

procesy sexec procesy {
	if( flags != flags+1 )
	{	log("sexec disabled",flags,flags+1);
		return(SKIP);
	}
	flags -= 1;
	log("sexec enabled");
	if( proc.egid != target.egid )
	{	proc.egid = target.egid;
		proc.sgid = target.sgid;
		proc.fsgid= target.fsgid;
	}
	proc.ecap = target.ecap - CAP_SETPCAP - CAP_SYS_MODULE - CAP_SYS_RAWIO;
	proc.pcap = target.pcap - CAP_SETPCAP - CAP_SYS_MODULE - CAP_SYS_RAWIO;
	proc.icap = target.icap - CAP_SETPCAP - CAP_SYS_MODULE - CAP_SYS_RAWIO;
	proc.euid = target.euid;
	proc.suid = target.suid;
	proc.fsuid= target.fsuid;
	return(SKIP);
}


function test {
	"/medusa/force/f_showargs.mo" ( 1 );
}

procesy exec "/bin/sync" {
	log ("sync", pid, event, vs, vsr, vsw, vss);
//	log("sync-trace",syscall);
}

/*
procesy exec "/usr/bin/id" {
	log ("id", pid, vs, vsr, vsw, vss);
}
*/

procesy syscall {
	if( syscall==sys_setuid || syscall==sys_setreuid || syscall==sys_setresuid || syscall==sys_setuid32 || syscall==sys_setreuid32 || syscall==sys_setresuid32 )
		log ("syscall",pid,syscall,arg0,arg1,arg2,arg3,arg4);
}

/*
procesy fork {
	log("fork begin",pid,uid,event);
}
procesy start {
	log("start",pid,uid,event);
}
*/

function init {
	xenter_domain("init");
	log("Constable started.");
//	vs = space medusa;
}

